local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService") -- Added for dragging

-- UI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "PetSpawnerUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = PlayerGui

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 320, 0, 250)
MainFrame.Position = UDim2.new(0.5, -160, 0.5, -200)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BorderSizePixel = 0
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local TitleText = Instance.new("TextLabel")
TitleText.Name = "TitleText"
TitleText.Size = UDim2.new(1, -40, 1, 0)
TitleText.Position = UDim2.new(0, 10, 0, 0)
TitleText.BackgroundTransparency = 1
TitleText.Text = "Pet Spawner"
TitleText.Font = Enum.Font.GothamBold
TitleText.TextColor3 = Color3.fromRGB(200, 255, 200)
TitleText.TextSize = 18
TitleText.TextXAlignment = Enum.TextXAlignment.Left
TitleText.Parent = TitleBar

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 30, 1, 0)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundTransparency = 1
CloseButton.Text = "X"
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextColor3 = Color3.fromRGB(255, 100, 100)
CloseButton.TextSize = 18
CloseButton.Parent = TitleBar

CloseButton.MouseButton1Click:Connect(function()
	MainFrame.Visible = false
end)

local function showNotification(username)
	local Notification = Instance.new("TextLabel")
	Notification.Size = UDim2.new(0, 240, 0, 30)
	Notification.Position = UDim2.new(0.5, -120, 0, -40)
	Notification.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
	Notification.TextColor3 = Color3.fromRGB(255, 255, 255)
	Notification.Text = username .. " spawned a pet!"
	Notification.Font = Enum.Font.Gotham
	Notification.TextSize = 14
	Notification.AnchorPoint = Vector2.new(0.5, 0)
	Notification.Parent = ScreenGui

	local uiCorner = Instance.new("UICorner")
	uiCorner.CornerRadius = UDim.new(0, 8)
	uiCorner.Parent = Notification

	local tweenIn = TweenService:Create(Notification, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -120, 0, 20)})
	tweenIn:Play()

	tweenIn.Completed:Wait()
	wait(2)

	local tweenOut = TweenService:Create(Notification, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -120, 0, -40)})
	tweenOut:Play()
	tweenOut.Completed:Wait()
	Notification:Destroy()
end

local SpawnButton = Instance.new("TextButton")
SpawnButton.Name = "SpawnButton"
SpawnButton.Size = UDim2.new(0, 200, 0, 40)
SpawnButton.Position = UDim2.new(0.5, -100, 0.5, -20)
SpawnButton.BackgroundColor3 = Color3.fromRGB(50, 100, 50)
SpawnButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SpawnButton.Text = "Spawn Pet"
SpawnButton.Font = Enum.Font.GothamBold
SpawnButton.TextSize = 16
SpawnButton.Parent = MainFrame

local UICorner2 = Instance.new("UICorner")
UICorner2.CornerRadius = UDim.new(0, 8)
UICorner2.Parent = SpawnButton

local function generateUsername()
	local prefixes = {"Cool", "Super", "Mega", "Dark", "Epic", "Sneaky"}
	local animals = {"Fox", "Wolf", "Bear", "Tiger", "Cat", "Dog"}
	local numbers = tostring(math.random(10, 99))
	return prefixes[math.random(1, #prefixes)] .. animals[math.random(1, #animals)] .. numbers
end

local function updateOnlineCount()
	local countLabel = MainFrame:FindFirstChild("UserCount")
	if not countLabel then
		countLabel = Instance.new("TextLabel")
		countLabel.Name = "UserCount"
		countLabel.Size = UDim2.new(0, 200, 0, 20)
		countLabel.Position = UDim2.new(0.5, -100, 1, -30)
		countLabel.BackgroundTransparency = 1
		countLabel.TextColor3 = Color3.fromRGB(180, 180, 180)
		countLabel.TextSize = 14
		countLabel.Font = Enum.Font.Gotham
		countLabel.Parent = MainFrame
	end
	local totalUsers = #Players:GetPlayers()
	countLabel.Text = "Online Users: " .. tostring(totalUsers)
end

SpawnButton.MouseButton1Click:Connect(function()
	local username = generateUsername()
	showNotification(username)
	updateOnlineCount()
end)

updateOnlineCount()
Players.PlayerAdded:Connect(updateOnlineCount)
Players.PlayerRemoving:Connect(updateOnlineCount)

-- ========== WINDOW DRAGGING + SAVE POSITION ==========
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
	local delta = input.Position - dragStart
	MainFrame.Position = UDim2.new(
		startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y
	)
end

MainFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = MainFrame.Position

		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false

				-- Save current position
				Player:SetAttribute("LastUIPosition", {
					XScale = MainFrame.Position.X.Scale,
					XOffset = MainFrame.Position.X.Offset,
					YScale = MainFrame.Position.Y.Scale,
					YOffset = MainFrame.Position.Y.Offset,
				})
			end
		end)
	end
end)

MainFrame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

-- Restore previous position
local savedPos = Player:GetAttribute("LastUIPosition")
if savedPos then
	MainFrame.Position = UDim2.new(
		savedPos.XScale or 0.5,
		savedPos.XOffset or -160,
		savedPos.YScale or 0.5,
		savedPos.YOffset or -200
	)
end
